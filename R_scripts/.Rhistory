source('~/Desktop/codebase/R_scripts/clustering.R')
source('~/Desktop/codebase/R_scripts/clustering.R')
print(ig)
print(ig[0])
type(ig)
typeof(ig)
ig[1][1]
ig[1][2]
ig[1][3]
ig[2]
ig[2]
print(ig[2]$name)
print(ig[2]["name"])
print(ig[2][1])
print(ig[2])
print(ig[2][1][1])
print(ig[2][1])
cc <-transitivity(ig, vids=2609, type="local")
cc <-transitivity(ig, vids='2609', type="local")
cc <-transitivity(ig, vids='Y156H on gene 9212' type="local")
cc <-transitivity(ig, vids=V('Y156H on gene 9212') type="local")
cc <-transitivity(ig, vids=V('2609') type="local")
cc <-transitivity(ig, vids=V('Y156H on gene 9212') type="local")
get.graph.attribute(ig, name)
get.graph.attribute(ig, 2609)
get.graph.attribute(ig, 'Y156H on gene 9212' )
igraphdemo("betweenness")
get.data.frame(g, what="vertices")
get.data.frame(ig, what="vertices")
rownames(ig) = make.names(names, unique=TRUE)
rownames(ig) = make.names(nams, unique=TRUE)
get.vertex.attribute(ig, id, index=V(graph))
get.vertex.attribute(ig, id, index=V(ig))
get.vertex.attribute(ig, nodes, index=V(ig))
get.vertex.attribute(ig, node, index=V(ig))
get.vertex.attribute(ig, node, index=V(ig))
typeof(nodes)
nodes_df = do.call(rbind.data.frame, nodes)
edges_df = do.call(rbind.data.frame, edges)
library(igraph)
library(igraph)
#create igraph object
ig = graph.data.frame(edges_df, directed=TRUE, nodes_df)
get.vertex.attribute(ig, node, index=V(ig))
get.vertex.attribute(ig, id, index=V(ig))
get.data.frame(ig, what="vertices")
get.vertex.attribute(ig, node, index=V(ig))
)
get.vertex.attribute(ig, node, index=V(ig))
get.vertex.attribute(ig, node, index=V(ig))
communities = edge.betweenness.community(ig)
V(ig)$label <- V(ig)$name
V(ig)$label <- V(ig)$namesdafasdgsdfghsdf
demo(package="igraph")
demo(community)
demo(crashR)
print(ig)
class(ig)
ig$name
ig$label
get.vertex.attribute(ig, "Alisterib", index=V(graph))
get.vertex.attribute(ig, "Alisterib", index=V(ig))
get.vertex.attribute(ig, , index=V(ig))
get.vertex.attribute(ig, 2069 , index=V(ig))
get.vertex.attribute(ig, * , index=V(ig))
list.vertex.attributes(ig)
print(ig$name)
print(ig[0]$name)
get.vertex.attribute(ig, "name" , index=V(ig))
get.vertex.attribute(ig, "id" , index=V(ig))
write.csv(x= all_nodes ,file="pc2_allnodes_list.csv")
all_nodes = cypher(neo4j,getAllNodesQuery)
source('~/Desktop/codebase/R_scripts/betweenness/node_betweeness.R')
print(all_edges)
print(all_nodes)
full_ig = graph.data.frame(all_edges,directed=TRUE, all_nodes)
write.csv(x= all_nodes ,file="pc2_allnodes_list.csv")
write.csv(x= all_edges ,file="pc2_alledges_list.csv")
print(all_nodes)
get.vertex.attribute(ig, "name" , index=V(ig))
source('~/Desktop/codebase/R_scripts/betweenness/node_betweeness.R')
source('~/Desktop/codebase/R_scripts/betweenness/node_betweeness.R')
get.vertex.attribute(ig, "name" , index=V(ig))
get.vertex.attribute(ig, "id" , index=V(ig))
get.vertex.attribute(ig, "label" , index=V(ig))
get.vertex.attribute(ig, "entity_class" , index=V(ig))
get.vertex.attribute(ig, "name" , index=V(ig))
source('~/Desktop/codebase/R_scripts/betweenness/node_betweeness.R')
get.vertex.attribute(ig, "name" , index=V(ig))
source('~/Desktop/codebase/R_scripts/betweenness/node_betweeness.R')
get.vertex.attribute(ig, "name" , index=V(ig))
list.vertex.attributes(ig)
source('~/Desktop/codebase/R_scripts/betweenness/node_betweeness.R')
